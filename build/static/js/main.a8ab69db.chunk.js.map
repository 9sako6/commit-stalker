{"version":3,"sources":["serviceWorker.ts","components/PageInfo.tsx","helper.tsx","APIUtils.ts","components/Forms.tsx","components/Buttons.tsx","components/CommitRow.tsx","components/CommitHistory.tsx","components/Loading.tsx","components/Header.tsx","components/RequestLeftCard.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","PageInfo","props","oldestPage","totalCommitNum","className","page","renderErrorMessage","status","message","document","querySelectorAll","forEach","elem","ReactDOM","render","getElementById","requestTotalCommitNum","user","repo","a","axios","get","data","Error","requestCommitHistory","useStyles","makeStyles","root","fontSize","marginRight","color","fontWeight","borderBottomColor","borderColor","input","UserForm","classes","TextField","value","label","onChange","handleChange","onKeyDown","handleKeyDown","InputProps","RepoForm","type","PageForm","display","SearchButton","id","IconButton","aria-label","onClick","handleClick","LatestButton","BackButton","NextButton","OldestButton","CommitRow","author","this","json","login","author_link","html_url","avatar_url","date","Date","commit","verifyMark","verification","verified","style","width","data-pjax","href","target","rel","emoji","emojify","alt","src","toLocaleDateString","toLocaleTimeString","Component","CommitHistory","prevDate","jsonList","map","i","dateList","String","split","slice","Fragment","key","Loading","Header","commitHistory","totalCommitNumHistory","handleUserChange","e","setState","currentTarget","handleRepoChange","handlePageChange","renderLoading","renderCommitHistory","userRepoPage","has","then","set","renderPageInfo","userRepo","res","Number","renderMain","handleFormKeyDown","keyCode","state","handleLatestClick","handleBackClick","isNaN","handleNextClick","handleOldestClick","handleSearchKeyDown","handleLatestKeyDown","handleBackKeyDown","handleNextKeyDown","handleOldestKeyDown","Map","animationKey","size","Grid","container","direction","justify","alignItems","zIndex","position","right","bottom","backgroundColor","boxShadow","padding","textDecoration","Card","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a8ab69db.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./page_info.scss\";\n\nexport const PAGE_INFO_CLASS = \".page-info-wrap\";\ntype PageInfoProps = { page: number; totalCommitNum: number };\nexport default function PageInfo(props: PageInfoProps) {\n  const oldestPage = ((props.totalCommitNum / 100) | 0) + 1;\n  return <div className=\"page-info\">{`${props.page} / ${oldestPage}`}</div>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PAGE_INFO_CLASS } from \"./components/PageInfo\";\n\nexport function renderErrorMessage(status: number, message: string) {\n  document.querySelectorAll(PAGE_INFO_CLASS).forEach(elem => {\n    ReactDOM.render(<></>, elem);\n  });\n  ReactDOM.render(\n    <div>\n      <h1>{status}</h1>\n      <div>{message}</div>\n    </div>,\n    document.getElementById('commit-history')\n  );\n}","import axios from \"axios\";\nimport { renderErrorMessage } from \"./helper\";\n/**\n * request total commit count\n */\nexport async function requestTotalCommitNum(user: string, repo: string) {\n  try {\n    const { data } = await axios.get(\n      `https://secure-tundra-40881.herokuapp.com/count?user=${user}&repo=${repo}`\n    );\n    return data;\n  } catch (err) {\n    renderErrorMessage(err.status, err.message);\n    throw new Error(err.message);\n  }\n}\n/**\n * request commit history via GitHub API\n */\nexport async function requestCommitHistory(\n  user: string,\n  repo: string,\n  page: number\n) {\n  try {\n    const { data } = await axios.get(\n      `https://api.github.com/repos/${user}/${repo}/commits?page=${page}&per_page=100`\n    );\n    return data;\n  } catch (err) {\n    renderErrorMessage(err.status, err.message);\n    throw new Error(err.message);\n  }\n}\n","import React from \"react\";\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./form.scss\";\n\ninterface FuncChange {\n  (arg: React.ChangeEvent<HTMLInputElement>): void;\n}\ninterface FuncKeyDown {\n  (arg: React.KeyboardEvent<HTMLInputElement>): void;\n}\ntype FormProps = TextFieldProps & {\n  handleChange: FuncChange;\n  handleKeyDown: FuncKeyDown;\n  value: string;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"1.5em\",\n    marginRight: '10px',\n    '& label': {\n      color: '#ddf',\n      fontWeight: \"700\"\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'white',\n      },\n    },\n  },\n  input: {\n    color: 'white',\n  }\n});\n\nexport function UserForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      value={props.value}\n      label=\"User\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\nexport function RepoForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      type=\"text\"\n      value={props.value}\n      label=\"Repository\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\nexport function PageForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      type=\"text\"\n      value={props.value}\n      label=\"Page Number\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport \"./button.scss\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"inline-block\",\n    '& svg': {\n      color: 'white'\n    },\n  },\n});\n\ninterface FuncClick {\n  (): void;\n}\ninterface FuncKeyDown {\n  (arg: React.KeyboardEvent<HTMLInputElement>): void;\n}\ntype ButtonProps = { handleClick: FuncClick; handleKeyDown: FuncKeyDown };\nexport function SearchButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      id=\"request\"\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SearchIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport function LatestButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      // onClick={props.handleClick}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SkipPreviousIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n\n      {/* <i tabIndex={0} className=\"fas fa-angle-double-left\"></i> */}\n    </div>\n  );\n}\n\nexport function BackButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      // onClick={props.handleClick}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <ArrowBackIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\nexport function NextButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <ArrowForwardIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\nexport function OldestButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SkipNextIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport emoji from \"node-emoji\";\n// css\nimport \"./commit_row.scss\";\n\ninterface CommitAuthor {\n  date: string;\n  email: string;\n  name: string;\n}\n\ninterface CommitVerification {\n  verified: boolean;\n}\n\ninterface Commit {\n  author: CommitAuthor;\n  comment_count?: number;\n  committer?: object;\n  message: string;\n  tree?: object;\n  url?: string;\n  verification: CommitVerification;\n}\n\ninterface Author {\n  login: string;\n  html_url: string;\n  avatar_url: string;\n}\n\nexport interface GitHubAPIResponse {\n  author: Author;\n  comments_url?: string;\n  commit: Commit;\n  committer?: object;\n  html_url?: string;\n  node_id?: string;\n  parents?: object[];\n  sha?: string;\n  url?: string;\n}\n\ntype CommitRowProps = {\n  json: GitHubAPIResponse;\n  user: string;\n  repo: string;\n};\nexport default class CommitRow extends Component<CommitRowProps> {\n  constructor(props: CommitRowProps) {\n    super(props);\n  }\n  render() {\n    const author =\n      this.props.json.author === null\n        ? \"anonymous author\"\n        : this.props.json.author.login;\n    const author_link =\n      this.props.json.author === null ? \"#\" : this.props.json.author.html_url;\n    const avatar_url =\n      this.props.json.author === null ? \"#\" : this.props.json.author.avatar_url;\n    const date = new Date(this.props.json.commit.author.date);\n\n    const isVerified = this.props.json.commit.verification.verified;\n    const verifyMark =\n      isVerified === true ? (\n        <div className=\"table-list-cell\">\n          <div className=\"verify-mark\">Verified</div>\n        </div>\n      ) : (\n        <></>\n      );\n    return (\n      <li className=\"commit-list-item\">\n        <div className=\"table-list-cell\" style={{ width: \"800px\" }}>\n          <p className=\"commit-title\">\n            <a\n              className=\"message-link\"\n              data-pjax=\"true\"\n              href={this.props.json.html_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {emoji.emojify(this.props.json.commit.message)}\n            </a>\n          </p>\n          <div className=\"author-area\">\n            <a href={author_link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className=\"author-avatar\" alt=\"author-avatar\" src={avatar_url} />\n            </a>\n            <a\n              className=\"author-link\"\n              data-pjax=\"true\"\n              href={`https://github.com/${author}/${this.props.repo}/commit?author=${author}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {author}\n            </a>\n            <span className=\"date\">\n              committed on {date.toLocaleDateString()}\n              {date.toLocaleTimeString()}\n            </span>\n          </div>\n        </div>\n        {verifyMark}\n      </li>\n    );\n  }\n}\n","import React from \"react\";\n// components\nimport CommitRow, { GitHubAPIResponse } from \"./CommitRow\";\n// css\nimport \"./commit_history.scss\";\n\ntype CommitHistoryProps = {\n  jsonList: GitHubAPIResponse[];\n  user: string;\n  repo: string;\n};\nexport const COMMIT_HISTORY_ID = \"commit-history\";\nexport default function CommitHistory(props: CommitHistoryProps) {\n  let prevDate = \"\";\n  return (\n    <>\n      {props.jsonList.map((json: GitHubAPIResponse, i) => {\n        const dateList = String(new Date(json.commit.author.date))\n          .split(\" \")\n          .slice(1, 4);\n        const date = `${dateList[0]} ${dateList[1]}, ${dateList[2]}`;\n        if (date !== prevDate) {\n          prevDate = date;\n          return (\n            <React.Fragment key={i}>\n              <div className=\"commit-group-title\">{date}</div>\n              <CommitRow json={json} user={props.user} repo={props.repo} />\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <CommitRow\n              key={i}\n              json={json}\n              user={props.user}\n              repo={props.repo}\n            />\n          );\n        }\n      })}\n    </>\n  );\n}\n","/*\n  The MIT License (MIT)\n  Copyright (c) 2015 Tobias Ahlin\n  https://github.com/tobiasahlin/SpinKit/blob/master/LICENSE\n */\nimport React from \"react\";\nimport \"./loading.scss\";\n\nexport default function Loading() {\n  return (\n    <div className=\"sk-fading-circle\">\n      <div className=\"sk-circle1 sk-circle\"></div>\n      <div className=\"sk-circle2 sk-circle\"></div>\n      <div className=\"sk-circle3 sk-circle\"></div>\n      <div className=\"sk-circle4 sk-circle\"></div>\n      <div className=\"sk-circle5 sk-circle\"></div>\n      <div className=\"sk-circle6 sk-circle\"></div>\n      <div className=\"sk-circle7 sk-circle\"></div>\n      <div className=\"sk-circle8 sk-circle\"></div>\n      <div className=\"sk-circle9 sk-circle\"></div>\n      <div className=\"sk-circle10 sk-circle\"></div>\n      <div className=\"sk-circle11 sk-circle\"></div>\n      <div className=\"sk-circle12 sk-circle\"></div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport UseAnimations from \"react-useanimations\";\n// utils\nimport { requestTotalCommitNum, requestCommitHistory } from \"../APIUtils\";\n// components\nimport { UserForm, RepoForm, PageForm } from \"./Forms\";\nimport {\n  SearchButton,\n  LatestButton,\n  BackButton,\n  NextButton,\n  OldestButton,\n} from \"./Buttons\";\nimport CommitHistory, { COMMIT_HISTORY_ID } from \"./CommitHistory\";\nimport { GitHubAPIResponse } from \"./CommitRow\";\nimport Loading from \"./Loading\";\nimport PageInfo, { PAGE_INFO_CLASS } from \"./PageInfo\";\n// css\nimport \"./header.scss\";\n\n/**\n * Header\n */\nexport const HEADER_ID = \"site-header\";\ntype HeaderProps = {};\ntype HeaderState = { user: string; repo: string; page: string };\nexport default class Header extends Component<HeaderProps, HeaderState> {\n  commitHistory: Map<string, GitHubAPIResponse[]>;\n  totalCommitNumHistory: Map<string, number>;\n  constructor(props: HeaderProps) {\n    super(props);\n    this.state = { user: \"\", repo: \"\", page: \"1\" };\n    // commitHistory restores histories of response from GitHub API. key is 'user/repo/page'\n    this.commitHistory = new Map();\n    // totalCommitNumHistory restores totalCommitNum. key is 'user/repo'\n    this.totalCommitNumHistory = new Map();\n  }\n  handleUserChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ user: e.currentTarget.value });\n  };\n  handleRepoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ repo: e.currentTarget.value });\n  };\n  handlePageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ page: e.currentTarget.value });\n  };\n  renderLoading = () => {\n    // render loading animation\n    document.querySelectorAll(PAGE_INFO_CLASS).forEach(elem => {\n      ReactDOM.render(<Loading />, elem);\n    });\n    ReactDOM.render(<Loading />, document.getElementById(COMMIT_HISTORY_ID));\n  };\n  renderCommitHistory = async (user: string, repo: string, page: number) => {\n    const userRepoPage = `${user}/${repo}/${page}`;\n    if (this.commitHistory.has(userRepoPage) === false) {\n      await requestCommitHistory(user, repo, page).then(\n        (jsonList: GitHubAPIResponse[]) => {\n          // save response\n          this.commitHistory.set(userRepoPage, jsonList);\n        }\n      );\n    }\n    // render commit history\n    ReactDOM.render(\n      <CommitHistory\n        jsonList={this.commitHistory.get(userRepoPage)!}\n        user={user}\n        repo={repo}\n      />,\n      document.getElementById(COMMIT_HISTORY_ID)\n    );\n  };\n  renderPageInfo = async (user: string, repo: string, page: number) => {\n    const userRepo = `${user}/${repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(user, repo).then(res => {\n        const totalCommitNum = Number(res);\n        this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n      });\n    }\n    document.querySelectorAll(PAGE_INFO_CLASS).forEach(elem => {\n      ReactDOM.render(\n        <PageInfo\n          page={page}\n          totalCommitNum={this.totalCommitNumHistory.get(userRepo)!}\n        />,\n        elem\n      );\n    });\n  };\n  renderMain = (user: string, repo: string, page: number) => {\n    if (user === \"\" || repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    // render\n    this.renderCommitHistory(user, repo, page);\n    this.renderPageInfo(user, repo, page);\n  };\n  handleFormKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.renderMain(\n        this.state.user,\n        this.state.repo,\n        Number(this.state.page)\n      );\n    }\n  };\n  handleLatestClick = () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    this.setState({ page: \"1\" });\n    this.renderMain(this.state.user, this.state.repo, 1);\n  };\n  handleBackClick = () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    const page = Number(this.state.page);\n    if (isNaN(page) || page <= 1) {\n      return false;\n    }\n    this.renderLoading();\n    this.setState({ page: String(page - 1) });\n    this.renderMain(this.state.user, this.state.repo, page - 1);\n  };\n  handleNextClick = async () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    const page = Number(this.state.page);\n    const userRepo = `${this.state.user}/${this.state.repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(this.state.user, this.state.repo).then(\n        res => {\n          const totalCommitNum = Number(res);\n          this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n        }\n      );\n    }\n    const oldestPage =\n      ((this.totalCommitNumHistory.get(userRepo)! / 100) | 0) + 1;\n    if (isNaN(page) || page >= oldestPage) {\n      this.renderMain(this.state.user, this.state.repo, page);\n      return false;\n    } else {\n      this.setState({ page: String(page + 1) });\n      this.renderMain(this.state.user, this.state.repo, page + 1);\n    }\n  };\n  handleOldestClick = async () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    const userRepo = `${this.state.user}/${this.state.repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(this.state.user, this.state.repo).then(\n        res => {\n          const totalCommitNum = Number(res);\n          this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n        }\n      );\n    }\n    const oldestPage =\n      ((this.totalCommitNumHistory.get(userRepo)! / 100) | 0) + 1;\n    this.setState({ page: String(oldestPage) });\n    this.renderMain(this.state.user, this.state.repo, oldestPage);\n  };\n  handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.renderMain(\n        this.state.user,\n        this.state.repo,\n        Number(this.state.page)\n      );\n    }\n  };\n  handleLatestKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleLatestClick();\n    }\n  };\n  handleBackKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleBackClick();\n    }\n  };\n  handleNextKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleNextClick();\n    }\n  };\n  handleOldestKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleOldestClick();\n    }\n  };\n  render() {\n    return (\n      <div id=\"header-menu\">\n        <div className=\"site-title\">\n          <a href=\"https://github.com/9sako6/commit-stalker\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <UseAnimations animationKey=\"github\" size={32} />\n                  </td>\n                  <td>Commit Stalker</td>\n                </tr>\n              </tbody>\n            </table>\n          </a>\n        </div>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <div>\n            <UserForm\n              value={String(this.state.user)}\n              handleChange={this.handleUserChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <RepoForm\n              value={String(this.state.repo)}\n              handleChange={this.handleRepoChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <PageForm\n              value={String(this.state.page)}\n              handleChange={this.handlePageChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <SearchButton\n              handleClick={() =>\n                this.renderMain(\n                  this.state.user,\n                  this.state.repo,\n                  Number(this.state.page)\n                )\n              }\n              handleKeyDown={this.handleSearchKeyDown}\n            />\n            <LatestButton\n              handleClick={this.handleLatestClick}\n              handleKeyDown={this.handleLatestKeyDown}\n            />\n            <BackButton\n              handleClick={this.handleBackClick}\n              handleKeyDown={this.handleBackKeyDown}\n            />\n            <NextButton\n              handleClick={this.handleNextClick}\n              handleKeyDown={this.handleNextKeyDown}\n            />\n            <OldestButton\n              handleClick={this.handleOldestClick}\n              handleKeyDown={this.handleOldestKeyDown}\n            />\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const REQUEST_LEFT_CARD_ID = \"request-left-card\";\n\nconst useStyles = makeStyles({\n  root: {\n    zIndex: 900,\n    position: 'fixed',\n    right: '10px',\n    bottom: '60px',\n    width: '160px',\n    backgroundColor: '#f9f7f5',\n    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.3)',\n    padding: '10px',\n    '& a': {\n      textDecoration: 'none'\n    }\n  },\n});\n\nexport default function RequestLeftCard() {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <a\n        href=\"https://developer.github.com/v3/#rate-limiting\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        The GitHub API's rate limit allows for up to 60 requests per hour\n      </a>\n    </Card>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nimport Header, { HEADER_ID } from './components/Header';\n// import Footer, { FOOTER_ID } from './components/Footer';\nimport RequestLeftCard, { REQUEST_LEFT_CARD_ID } from './components/RequestLeftCard';\n// css\nimport './app.scss';\n// header\nReactDOM.render(\n  <Header />,\n  document.getElementById(HEADER_ID)\n);\n// request left card\nReactDOM.render(\n  <RequestLeftCard />,\n  document.getElementById(REQUEST_LEFT_CARD_ID)\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}