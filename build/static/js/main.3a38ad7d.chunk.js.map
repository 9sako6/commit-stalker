{"version":3,"sources":["serviceWorker.ts","components/partials/PageInfo.tsx","helper.tsx","APIUtils.tsx","components/header/title.tsx","components/partials/Forms.tsx","components/partials/Buttons.tsx","components/partials/CommitRow.tsx","components/CommitHistory.tsx","components/partials/Loading.tsx","components/header/index.tsx","components/header/Header.tsx","components/Message.tsx","app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","PageInfo","props","oldestPage","totalCommitNum","className","page","renderErrorMessage","message","targetElementId","callback","ReactDOM","render","style","textAlign","document","getElementById","clearElements","selector","querySelectorAll","forEach","targetElem","requestTotalCommitNum","user","repo","a","axios","get","data","requestCommitHistory","containerStyle","marginLeft","marginRight","maxWidth","titleStyle","color","fontSize","Link","href","target","rel","underline","useStyles","makeStyles","root","fontWeight","borderBottomColor","borderColor","input","UserForm","classes","TextField","value","label","onChange","handleChange","onKeyDown","handleKeyDown","InputProps","RepoForm","type","PageForm","display","SearchButton","id","IconButton","aria-label","onClick","handleClick","LatestButton","BackButton","NextButton","OldestButton","author","json","login","author_link","html_url","avatar_url","date","Date","commit","verifyMark","verification","verified","width","data-pjax","emoji","emojify","alt","src","toLocaleDateString","toLocaleTimeString","CommitHistory","prevDate","undefined","jsonList","map","i","dateList","String","split","slice","Fragment","key","CommitRow","Loading","Header","commitHistory","totalCommitNumHistory","handleUserChange","e","setState","currentTarget","handleRepoChange","handlePageChange","renderLoading","elem","renderCommitHistory","userRepoPage","has","then","set","renderPageInfo","userRepo","res","Number","renderMain","handleFormKeyDown","keyCode","state","handleLatestClick","handleBackClick","isNaN","handleNextClick","handleOldestClick","handleSearchKeyDown","handleLatestKeyDown","handleBackKeyDown","handleNextKeyDown","handleOldestKeyDown","Map","Grid","container","direction","justify","alignItems","this","Component","Alert","React","useState","open","setOpen","Collapse","in","elevation","variant","action","size","severity","Message","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3a38ad7d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./page_info.scss\";\n\nexport const PAGE_INFO_CLASS = \".page-info-wrap\";\ntype PageInfoProps = { page: number; totalCommitNum: number };\nexport default function PageInfo(props: PageInfoProps) {\n  const oldestPage = ((props.totalCommitNum / 100) | 0) + 1;\n  return <div className=\"page-info\">{`${props.page} / ${oldestPage}`}</div>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport const renderErrorMessage = (\n  message: string,\n  targetElementId: string,\n  callback?: (arg?: any) => any\n) => {\n  ReactDOM.render(\n    <div style={{ textAlign: \"center\" }}>\n      <div>{message}</div>\n    </div>,\n    document.getElementById(targetElementId)\n  );\n  callback && callback();\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PAGE_INFO_CLASS } from \"./components/partials/PageInfo\";\nimport axios from \"axios\";\nimport { renderErrorMessage } from \"./helper\";\n\nconst clearElements = (selector: string): void => {\n  document.querySelectorAll(selector).forEach(targetElem => {\n    ReactDOM.render(<></>, targetElem);\n  });\n}\n\n/**\n * request total commit count\n */\nexport const requestTotalCommitNum = async (\n  user: string,\n  repo: string\n) => {\n  try {\n    const { data } = await axios.get(\n      `https://secure-tundra-40881.herokuapp.com/count?user=${user}&repo=${repo}`\n    );\n    return data;\n  } catch (err) {\n    renderErrorMessage(err.message, 'commit-history', () => clearElements(PAGE_INFO_CLASS));\n  }\n}\n\n/**\n * request commit history via GitHub API\n */\nexport const requestCommitHistory = async (\n  user: string,\n  repo: string,\n  page: number\n) => {\n  try {\n    const { data } = await axios.get(\n      `https://api.github.com/repos/${user}/${repo}/commits?page=${page}&per_page=100`\n    );\n    return data;\n  } catch (err) {\n    renderErrorMessage(err.message, 'commit-history', () => clearElements(PAGE_INFO_CLASS));\n  }\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nconst containerStyle = {\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  maxWidth: \"900px\"\n};\n\nconst titleStyle = {\n  color: \"#fff\",\n  fontSize: \"2rem\",\n};\nexport default () => (\n  <div style={containerStyle}>\n    <Link\n      href=\"https://github.com/9sako6/commit-stalker\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={titleStyle}\n      underline=\"none\"\n    >\n      Commit Stalker\n  </Link>\n  </div>\n)","import React from \"react\";\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./form.scss\";\n\ninterface FuncChange {\n  (arg: React.ChangeEvent<HTMLInputElement>): void;\n}\ninterface FuncKeyDown {\n  (arg: React.KeyboardEvent<HTMLInputElement>): void;\n}\ntype FormProps = TextFieldProps & {\n  handleChange: FuncChange;\n  handleKeyDown: FuncKeyDown;\n  value: string;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"1.5em\",\n    marginRight: '10px',\n    '& label': {\n      color: '#ddf',\n      fontWeight: \"700\"\n    },\n    '& label.Mui-focused': {\n      color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'white',\n      },\n    },\n  },\n  input: {\n    color: 'white',\n  }\n});\n\nexport function UserForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      value={props.value}\n      label=\"User\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\nexport function RepoForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      type=\"text\"\n      value={props.value}\n      label=\"Repository\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\nexport function PageForm(props: FormProps) {\n  const classes = useStyles();\n  return (\n    <TextField\n      color=\"primary\"\n      className={classes.root}\n      type=\"text\"\n      value={props.value}\n      label=\"Page Number\"\n      onChange={props.handleChange}\n      onKeyDown={props.handleKeyDown}\n      InputProps={{\n        className: classes.input\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport \"./button.scss\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"inline-block\",\n    '& svg': {\n      color: 'white'\n    },\n  },\n});\n\ninterface FuncClick {\n  (): void;\n}\ninterface FuncKeyDown {\n  (arg: React.KeyboardEvent<HTMLInputElement>): void;\n}\ntype ButtonProps = { handleClick: FuncClick; handleKeyDown: FuncKeyDown };\nexport function SearchButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      id=\"request\"\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SearchIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport function LatestButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      // onClick={props.handleClick}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SkipPreviousIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n\n      {/* <i tabIndex={0} className=\"fas fa-angle-double-left\"></i> */}\n    </div>\n  );\n}\n\nexport function BackButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      // onClick={props.handleClick}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <ArrowBackIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\nexport function NextButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <ArrowForwardIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\nexport function OldestButton(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      onKeyDown={props.handleKeyDown}\n    >\n      <IconButton aria-label=\"delete\" onClick={props.handleClick} >\n        <SkipNextIcon fontSize=\"inherit\" color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport emoji from \"node-emoji\";\nimport \"./commit_row.scss\";\nimport { GitHubAPIResponse } from \"../../@types/github-api\"\n\ntype CommitRowProps = {\n  json: GitHubAPIResponse;\n  user: string;\n  repo: string;\n};\nexport default (props: CommitRowProps) => {\n  const author =\n    props.json.author === null\n      ? \"anonymous author\"\n      : props.json.author.login;\n  const author_link =\n    props.json.author === null ? \"#\" : props.json.author.html_url;\n  const avatar_url =\n    props.json.author === null ? \"#\" : props.json.author.avatar_url;\n  const date = new Date(props.json.commit.author.date);\n\n  const isVerified = props.json.commit.verification.verified;\n  const verifyMark =\n    isVerified === true ? (\n      <div className=\"table-list-cell\">\n        <div className=\"verify-mark\">Verified</div>\n      </div>\n    ) : (\n        <></>\n      );\n  return (\n    <li className=\"commit-list-item\">\n      <div className=\"table-list-cell\" style={{ width: \"800px\" }}>\n        <p className=\"commit-title\">\n          <a\n            className=\"message-link\"\n            data-pjax=\"true\"\n            href={props.json.html_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {emoji.emojify(props.json.commit.message)}\n          </a>\n        </p>\n        <div className=\"author-area\">\n          <a href={author_link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className=\"author-avatar\" alt=\"author-avatar\" src={avatar_url} />\n          </a>\n          <a\n            className=\"author-link\"\n            data-pjax=\"true\"\n            href={`https://github.com/${author}/${props.repo}/commit?author=${author}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {author}\n          </a>\n          <span className=\"date\">\n            committed on {date.toLocaleDateString()}\n              &nbsp;\n              {date.toLocaleTimeString()}\n          </span>\n        </div>\n      </div>\n      {verifyMark}\n    </li>\n  );\n}","import React from \"react\";\n// components\nimport CommitRow from \"./partials/CommitRow\";\nimport { GitHubAPIResponse } from \"../@types/github-api\"\n// css\nimport \"./commit_history.scss\";\n\ntype CommitHistoryProps = {\n  jsonList: GitHubAPIResponse[];\n  user: string;\n  repo: string;\n};\nexport const COMMIT_HISTORY_ID = \"commit-history\";\nexport default function CommitHistory(props: CommitHistoryProps) {\n  let prevDate = \"\";\n  return props.jsonList !== undefined ? (\n    <>\n      {props.jsonList.map((json: GitHubAPIResponse, i) => {\n        const dateList = String(new Date(json.commit.author.date))\n          .split(\" \")\n          .slice(1, 4);\n        const date = `${dateList[0]} ${dateList[1]}, ${dateList[2]}`;\n        if (date !== prevDate) {\n          prevDate = date;\n          return (\n            <React.Fragment key={i}>\n              <div className=\"commit-group-title\">{date}</div>\n              <CommitRow json={json} user={props.user} repo={props.repo} />\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <CommitRow\n              key={i}\n              json={json}\n              user={props.user}\n              repo={props.repo}\n            />\n          );\n        }\n      })}\n    </>\n  ) : (<></>);\n}\n","/*\n  The MIT License (MIT)\n  Copyright (c) 2015 Tobias Ahlin\n  https://github.com/tobiasahlin/SpinKit/blob/master/LICENSE\n */\nimport React from \"react\";\nimport \"./loading.scss\";\n\nexport default function Loading() {\n  return (\n    <div className=\"sk-fading-circle\">\n      <div className=\"sk-circle1 sk-circle\"></div>\n      <div className=\"sk-circle2 sk-circle\"></div>\n      <div className=\"sk-circle3 sk-circle\"></div>\n      <div className=\"sk-circle4 sk-circle\"></div>\n      <div className=\"sk-circle5 sk-circle\"></div>\n      <div className=\"sk-circle6 sk-circle\"></div>\n      <div className=\"sk-circle7 sk-circle\"></div>\n      <div className=\"sk-circle8 sk-circle\"></div>\n      <div className=\"sk-circle9 sk-circle\"></div>\n      <div className=\"sk-circle10 sk-circle\"></div>\n      <div className=\"sk-circle11 sk-circle\"></div>\n      <div className=\"sk-circle12 sk-circle\"></div>\n    </div>\n  );\n}\n","import Header from \"./Header\";\n\nexport default Header;\n\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Grid from '@material-ui/core/Grid';\n// utils\nimport { requestTotalCommitNum, requestCommitHistory } from \"../../APIUtils\";\nimport { GitHubAPIResponse } from \"../../@types/github-api\"\n// components\nimport Title from \"./title\";\nimport { UserForm, RepoForm, PageForm } from \"../partials/Forms\";\nimport {\n  SearchButton,\n  LatestButton,\n  BackButton,\n  NextButton,\n  OldestButton,\n} from \"../partials/Buttons\";\nimport CommitHistory, { COMMIT_HISTORY_ID } from \"../CommitHistory\";\nimport Loading from \"../partials/Loading\";\nimport PageInfo, { PAGE_INFO_CLASS } from \"../partials/PageInfo\";\n// css\nimport \"./header.scss\";\n\n/**\n * Header\n */\nexport const HEADER_ID = \"site-header\";\ntype HeaderProps = {};\ntype HeaderState = { user: string; repo: string; page: string };\nexport default class Header extends Component<HeaderProps, HeaderState> {\n  commitHistory: Map<string, GitHubAPIResponse[]>;\n  totalCommitNumHistory: Map<string, number>;\n  constructor(props: HeaderProps) {\n    super(props);\n    this.state = { user: \"\", repo: \"\", page: \"1\" };\n    // commitHistory restores histories of response from GitHub API. key is 'user/repo/page'\n    this.commitHistory = new Map();\n    // totalCommitNumHistory restores totalCommitNum. key is 'user/repo'\n    this.totalCommitNumHistory = new Map();\n  }\n  handleUserChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ user: e.currentTarget.value });\n  };\n  handleRepoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ repo: e.currentTarget.value });\n  };\n  handlePageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ page: e.currentTarget.value });\n  };\n  renderLoading = () => {\n    // render loading animation\n    document.querySelectorAll(PAGE_INFO_CLASS).forEach(elem => {\n      ReactDOM.render(<Loading />, elem);\n    });\n    ReactDOM.render(<Loading />, document.getElementById(COMMIT_HISTORY_ID));\n  };\n  renderCommitHistory = async (user: string, repo: string, page: number) => {\n    const userRepoPage = `${user}/${repo}/${page}`;\n    if (this.commitHistory.has(userRepoPage) === false) {\n      await requestCommitHistory(user, repo, page).then(\n        (jsonList: GitHubAPIResponse[]) => {\n          // save response\n          this.commitHistory.set(userRepoPage, jsonList);\n        }\n      );\n    }\n    // render commit history\n    ReactDOM.render(\n      <CommitHistory\n        jsonList={this.commitHistory.get(userRepoPage)!}\n        user={user}\n        repo={repo}\n      />,\n      document.getElementById(COMMIT_HISTORY_ID)\n    );\n  };\n  renderPageInfo = async (user: string, repo: string, page: number) => {\n    const userRepo = `${user}/${repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(user, repo).then(res => {\n        const totalCommitNum = Number(res);\n        this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n      });\n    }\n    document.querySelectorAll(PAGE_INFO_CLASS).forEach(elem => {\n      ReactDOM.render(\n        <PageInfo\n          page={page}\n          totalCommitNum={this.totalCommitNumHistory.get(userRepo)!}\n        />,\n        elem\n      );\n    });\n  };\n  renderMain = (user: string, repo: string, page: number) => {\n    if (user === \"\" || repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    // render\n    this.renderCommitHistory(user, repo, page);\n    this.renderPageInfo(user, repo, page);\n  };\n  handleFormKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.renderMain(\n        this.state.user,\n        this.state.repo,\n        Number(this.state.page)\n      );\n    }\n  };\n  handleLatestClick = () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    this.setState({ page: \"1\" });\n    this.renderMain(this.state.user, this.state.repo, 1);\n  };\n  handleBackClick = () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    const page = Number(this.state.page);\n    if (isNaN(page) || page <= 1) {\n      return false;\n    }\n    this.renderLoading();\n    this.setState({ page: String(page - 1) });\n    this.renderMain(this.state.user, this.state.repo, page - 1);\n  };\n  handleNextClick = async () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    const page = Number(this.state.page);\n    const userRepo = `${this.state.user}/${this.state.repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(this.state.user, this.state.repo).then(\n        res => {\n          const totalCommitNum = Number(res);\n          this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n        }\n      );\n    }\n    const oldestPage =\n      ((this.totalCommitNumHistory.get(userRepo)! / 100) | 0) + 1;\n    if (isNaN(page) || page >= oldestPage) {\n      this.renderMain(this.state.user, this.state.repo, page);\n      return false;\n    } else {\n      this.setState({ page: String(page + 1) });\n      this.renderMain(this.state.user, this.state.repo, page + 1);\n    }\n  };\n  handleOldestClick = async () => {\n    if (this.state.user === \"\" || this.state.repo === \"\") {\n      return false;\n    }\n    this.renderLoading();\n    const userRepo = `${this.state.user}/${this.state.repo}`;\n    if (this.totalCommitNumHistory.has(userRepo) === false) {\n      await requestTotalCommitNum(this.state.user, this.state.repo).then(\n        res => {\n          const totalCommitNum = Number(res);\n          this.totalCommitNumHistory.set(userRepo, totalCommitNum);\n        }\n      );\n    }\n    const oldestPage =\n      ((this.totalCommitNumHistory.get(userRepo)! / 100) | 0) + 1;\n    this.setState({ page: String(oldestPage) });\n    this.renderMain(this.state.user, this.state.repo, oldestPage);\n  };\n  handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.renderMain(\n        this.state.user,\n        this.state.repo,\n        Number(this.state.page)\n      );\n    }\n  };\n  handleLatestKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleLatestClick();\n    }\n  };\n  handleBackKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleBackClick();\n    }\n  };\n  handleNextKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleNextClick();\n    }\n  };\n  handleOldestKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // when the enter key is pressed\n      this.handleOldestClick();\n    }\n  };\n  render() {\n    return (\n      <div id=\"site-header\">\n        <Title />\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <div>\n            <UserForm\n              value={String(this.state.user)}\n              handleChange={this.handleUserChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <RepoForm\n              value={String(this.state.repo)}\n              handleChange={this.handleRepoChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <PageForm\n              value={String(this.state.page)}\n              handleChange={this.handlePageChange}\n              handleKeyDown={this.handleFormKeyDown}\n            />\n            <SearchButton\n              handleClick={() =>\n                this.renderMain(\n                  this.state.user,\n                  this.state.repo,\n                  Number(this.state.page)\n                )\n              }\n              handleKeyDown={this.handleSearchKeyDown}\n            />\n            <LatestButton\n              handleClick={this.handleLatestClick}\n              handleKeyDown={this.handleLatestKeyDown}\n            />\n            <BackButton\n              handleClick={this.handleBackClick}\n              handleKeyDown={this.handleBackKeyDown}\n            />\n            <NextButton\n              handleClick={this.handleNextClick}\n              handleKeyDown={this.handleNextKeyDown}\n            />\n            <OldestButton\n              handleClick={this.handleOldestClick}\n              handleKeyDown={this.handleOldestKeyDown}\n            />\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Collapse from '@material-ui/core/Collapse';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Alert = (props: any) => {\n  const [open, setOpen] = React.useState(true);\n  return (\n    <Collapse in={open}>\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n        {...props}\n      />\n    </Collapse>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"900px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    '& a': {\n      color: \"#fff\"\n    }\n  },\n});\n\nexport default () => {\n  const classes = useStyles();\n  const message = \"The GitHub API's rate limit allows for up to 60 requests per hour\";\n  return (\n    <Alert\n      severity=\"info\"\n      className={classes.root}\n    >\n      <a\n        href=\"https://developer.github.com/v3/#rate-limiting\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {message}\n      </a>\n    </Alert>\n  );\n}\n","import React from 'react';\nimport './index.css';\nimport Header from './components/header';\nimport Message from './components/Message';\n// css\nimport './app.scss';\n\nexport default () => (\n  <>\n    <Header />\n    <div className=\"page-info-wrap\"></div>\n    <div id=\"commit-history\"></div>\n    <div className=\"page-info-wrap\"></div>\n    <Message />\n  </>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./app\";\n// css\nimport './app.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}